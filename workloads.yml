### Project Workloads ###
#########################
# Queue Microservice
apiVersion: apps/v1
kind: Deployment
metadata:
  name: queue
spec:
  selector:
    matchLabels:
      app: queue
  replicas: 1
  template: # pod template
    metadata:
      labels:
        app: queue
    spec:
      containers:
        - name: queue
          #   image: richardchesterwood/k8s-fleetman-queue:release2-arm64
          image: richardchesterwood/k8s-fleetman-queue:release2
          resources: # for pods in this container to run comfortably, it needs these resources
            requests:
              memory: 300Mi
              cpu: 100m
---
# Position Simulator Microservice
# This doesn't need a service since it doesn't have frontend or rest api.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: position-simulator
spec:
  selector:
    matchLabels:
      app: position-simulator
  replicas: 1
  template: # pod template
    metadata:
      labels:
        app: position-simulator
    spec:
      containers:
        - name: position-tracker
          #   image: richardchesterwood/k8s-fleetman-position-simulator:release2-arm64
          image: richardchesterwood/k8s-fleetman-position-simulator:release2
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: production-microservice
          #   # Method 1 for reading configmap - Individual values
          #   - name: DATABASE_URL
          #     valueFrom:
          #       configMapKeyRef:
          #         name: global-database-config
          #         key: database.url
          # # Method 2 - Apply as env variables
          # envFrom:
          #   - configMapRef:
          #     name: global-database-config

          # Method 3 - Using volumes
          # This will create file for each key
          volumeMounts:
            - name: database-config-volume
              mountPath: /etc/any/directory/config # does not need to exist beforehand

          resources:
            requests:
              memory: 200Mi
              cpu: 50m
      volumes:
        - name: database-config-volume
          configMap:
            name: global-database-config

---
# Position Tracker Microservice
apiVersion: apps/v1
kind: Deployment
metadata:
  name: position-tracker
spec:
  selector:
    matchLabels:
      app: position-tracker
  replicas: 1
  template: # pod template
    metadata:
      labels:
        app: position-tracker
    spec:
      containers:
        - name: position-tracker
          #   image: richardchesterwood/k8s-fleetman-position-tracker:release3-arm64
          image: richardchesterwood/k8s-fleetman-position-tracker:release3
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: production-microservice
          resources:
            requests:
              memory: 200Mi
              cpu: 50m

---
# API Gateway Microservice
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
spec:
  selector:
    matchLabels:
      app: api-gateway
  replicas: 3
  template: # pod template
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
        - name: api-gateway
          #   image: richardchesterwood/k8s-fleetman-api-gateway:release2-arm64
          # image: richardchesterwood/k8s-fleetman-api-gateway:release2
          image: richardchesterwood/k8s-fleetman-api-gateway:performance
          readinessProbe: # Check if pod is ready to receive requests
            httpGet:
              path: /
              port: 8080
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: production-microservice

          resources:
            requests:
              memory: 300Mi
              cpu: 100m

---
# Web App Microservice
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp
spec:
  selector:
    matchLabels:
      app: webapp
  replicas: 2
  template: # pod template
    metadata:
      labels:
        app: webapp
    spec:
      containers:
        - name: webapp
          #   image: richardchesterwood/k8s-fleetman-webapp-angular:release2-arm64
          image: richardchesterwood/k8s-fleetman-webapp-angular:release2
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: production-microservice
          resources:
            requests:
              memory: 100Mi
              cpu: 50m
